name: CI/CD Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Checkout du code source
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Check Go version
        run: go version


      # Set up Go environment
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.22'

      # Installer les dépendances Go
      - name: Install dependencies
        run: |
          cd services/inventory
          go mod tidy
          cd ../order
          go mod tidy
          cd ../payment
          go mod tidy

      # Exécuter les tests
      - name: Run tests
        run: |
          cd services/inventory
          go test ./...
          cd ../order
          go test ./...
          cd ../payment
          go test ./...

      # Build Docker images pour chaque service
      - name: Build Docker images
        run: |
          cd services/inventory
          docker build -t inventory-service .
          cd ../order
          docker build -t order-service .
          cd ../payment
          docker build -t payment-service .

      # Push Docker images to Docker Hub (ou un autre registry)
      # Push Docker images to Docker Hub (ou un autre registry)
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Tag Docker images
        run: |
          docker tag inventory-service ${{ secrets.DOCKER_USERNAME }}/inventory-service:latest
          docker tag order-service ${{ secrets.DOCKER_USERNAME }}/order-service:latest
          docker tag payment-service ${{ secrets.DOCKER_USERNAME }}/payment-service:latest

      - name: Push Docker images to Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/inventory-service:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/order-service:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/payment-service:latest

      # Déployer sur Kubernetes (si nécessaire)
      # Déployer sur Docker
      - name: Deploy to Docker
        run: |
          ./deploy.sh  # Exécute le script de déploiement
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

