services:
  payment:
    build:
      context: ./services/payment/
      dockerfile: Dockerfile
    container_name: payment_container
    env_file:
      - .env.payment
    ports:
      - '${PAYMENT_GRPC_PORT:-9000}:${PAYMENT_GRPC_PORT:-9000}'

  inventory:
    build:
      context: ./services/inventory/
      dockerfile: Dockerfile
    container_name: inventory_container
    env_file:
      - .env.inventory
    environment:
      - INVENTORY_DB_HOST=postgres
    ports:
      - '${INVENTORY_GRPC_PORT:-9001}:${INVENTORY_GRPC_PORT:-9001}'
    depends_on:
      - postgres

  order:
    build:
      context: ./services/order/
      dockerfile: Dockerfile
    container_name: order_container
    env_file:
      - .env.order
    environment:
      - ORDER_INVENTORY_SERVICE_HOST=inventory
      - ORDER_PAYMENT_SERVICE_HOST=payment
    ports:
      - '${ORDER_GRPC_PORT:-9002}:${ORDER_GRPC_PORT:-9002}'

  postgres:
    image: postgres:17.0-alpine
    container_name: postgres_container
    env_file:
      - .env.db
    ports:
      - '${POSTGRES_HOST_PORT:-5432}:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/initdb.sql:/docker-entrypoint-initdb.d/initdb.sql

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - ./monitoring/grafana:/var/lib/grafana
    depends_on:
      - prometheus
      - loki
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin

  loki:
    image: grafana/loki:2.9.2
    container_name: loki
    command: -config.file=/etc/loki/loki-config.yml
    ports:
      - "3100:3100"
    volumes:
      - ./monitoring/loki-config.yml:/etc/loki/loki-config.yml

  promtail:
    image: grafana/promtail:2.9.2
    container_name: promtail
    volumes:
      - ./monitoring/promtail-config.yml:/etc/promtail/promtail.yml
      - /var/log:/var/log
    command: -config.file=/etc/promtail/promtail.yml
    depends_on:
      - loki

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml

  jaeger:
    image: jaegertracing/all-in-one:1.53
    container_name: jaeger
    ports:
      - "16686:16686"
      - "6831:6831/udp"
      - "4318:4318"

  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    container_name: otel-collector
    command: ["--config=/etc/otel-collector-config.yml"]
    ports:
      - "4317:4317"
      - "4318:4318"
    volumes:
      - ./monitoring/otel-collector-config.yml:/etc/otel-collector-config.yml
    depends_on:
      - jaeger
      - prometheus

volumes:
  postgres_data:
